spring.application.name=notes
server.port=8085
spring.profiles.active=prod

spring.security.user.name=user
spring.security.user.password=password
#
spring.datasource.url=${DATABASE_URL_PROD}
spring.datasource.username=${DATABASE_USERNAME_PROD}
spring.datasource.password=${DATABASE_PASSWORD_PROD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.app.jwtSecret=${JWT_SECRET}
spring.app.jwtExpirationMs=${JWT_EXPIRATION_MS}

# Logging
logging.level.org.springframework.security=DEBUG
# use this to see the logs of spring security

frontend.url=${FRONTEND_URL}

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true 
#enable authentication means we need to provide username and password
spring.mail.properties.mail.smtp.starttls.enable=true
#enable tls means we are using tls protocol

# GitHub OAuth2 configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

#ccc77993c697781f3c1100bc6004777fdbdeb33c